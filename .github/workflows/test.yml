name: Go Test
'on':
  workflow_dispatch: {}
  schedule:
    - cron: 0 20 * * 1-5
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.4
      - name: Install Dependencies
        run: go get ./...
        shell: bash
      - name: Clone the Terraform provider source
        run: git clone https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy.git
        shell: bash
      - name: Build the Terraform provider from source
        run: go build -o terraform-provider-octopusdeploy
        working-directory: terraform-provider-octopusdeploy
      - name: Override the location used by Terraform provider
        run: |-
          cat <<EOT >> ~/.terraformrc
          provider_installation {
              dev_overrides {
              "octopusdeploylabs/octopusdeploy" = "${{ github.workspace }}/terraform-provider-octopusdeploy"
            }
            direct {}
          }
          EOT
      - name: Test
        run: |-
          go install gotest.tools/gotestsum@latest
          gotestsum --junitfile results.xml -- -v -coverprofile=coverage.out -coverpkg=github.com/OctopusSolutionsEngineering/OctopusTerraformExport/... -timeout 0 -json ./...
          go tool cover -html=coverage.out -o=coverage.html
          go tool cover -func=coverage.out -o=coverage.out
        shell: bash
        env:
          LICENSE: ${{ secrets.LICENSE }}
          ECR_ACCESS_KEY: ${{ secrets.ECR_ACCESS_KEY }}
          ECR_SECRET_KEY: ${{ secrets.ECR_SECRET_KEY }}
          GIT_CREDENTIAL: ${{ secrets.GIT_CREDENTIAL }}
          OCTOTESTSKIPINIT: false
          OCTODISABLEOCTOCONTAINERLOGGING: true
          OCTOTESTDUMPSTATE: true
          OCTOTESTDEFAULTSPACEID: Spaces-2
          GOMAXPROCS: 2
          TESTCONTAINERS_RYUK_DISABLED: true
          # Override these values to test a specific container and version.
          OCTOTESTIMAGEURL: octopusdeploy/linuxoctopus
          OCTOTESTVERSION: 2024.3.3434
      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.html
      - name: Go Coverage Badge
        if: always()
        uses: tj-actions/coverage-badge-go@v2
        with:
          filename: coverage.out
      - name: Verify Changed files
        if: always()
        uses: tj-actions/verify-changed-files@v17
        id: verify-changed-files
        with:
          files: README.md
      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."
      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        # This step fails if anything was pushed before the step was run.
        # It is not critical that the coverage badge be updated, so allow this step to fail.
        continue-on-error: true
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.head_ref }}
